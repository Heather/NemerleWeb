using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace Nemerle.Peg.Web
{
  partial internal class GrammarCompiler
  {
    public DefineAllMethods() : void
    {
      DefineGetMaxRollbackPos();
      DefineGetRuleName();
      DefineResetMaxRollbackPos();
      DefineResetMemoization();
      DefineParseMethods();

      _tb.Define(<[decl: mutable _parsingSource : Nemerle.Peg.Web.SourceSnapshot; ]>);
      _tb.Define(<[decl:
        public ParsingSource : Nemerle.Peg.Web.SourceSnapshot
        {
          get { _parsingSource }
        }
      ]>);
      
      PegGrammarOptions.GetDefineMethod(_tb)(<[decl:
        // should it be macro?
        protected GetText(tok : Nemerle.Peg.Web.NToken) : string
        {
          _parsingSource.OriginalText.Substring(tok.StartPos, tok.EndPos - tok.StartPos)
        }
      ]>);
         
      PegGrammarOptions.GetDefineMethod(_tb)(<[decl:
        // should it be macro?
        protected GetLocation(tok : Nemerle.Peg.Web.NToken) : Nemerle.Peg.Web.Location
        {
          Nemerle.Peg.Web.Location(_parsingSource, tok.StartPos, tok.EndPos)
        }
      ]>);
    }
  }
}
