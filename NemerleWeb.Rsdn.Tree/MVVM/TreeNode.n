using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

using NemerleWeb;
using NemerleWeb.TypedJS;

namespace Rsdn
{  
  [Unit]
  public class TreeNode
  {
    public Id : string { get; set; }
    public Caption : string { get; set; }
    public Hide : bool { get; set; }
    public IsOpened : bool { get; set; }
    public Children : List[TreeNode] { get; set; }
    public ImageClassName : string { get; set; }
    public Href : string {  get; set; }
    public LoadOnDemand : bool { get; set; }
    
    public Parent : TreeNode { get; set; }
    
    public IsLoading : bool { get; set; }
    public IsPinned : bool { get { MainPage.Instance?.Pinned?.IsPinned(this) } }
    public IsActive : bool { get { MainPage.Instance?.IsActiveNode(this) } }
    
    public TogglePin() : void
    {            
      if(!MainPage.Instance.Pinned.IsPinned(this)) MainPage.Instance.Pinned.AddPinned(Id)
      else MainPage.Instance.Pinned.RemovePinned(Id)
    }
    
    public CaptionClick() : void
    {
      if(LoadOnDemand || Children != null) {
        if(Children == null) {
          IsLoading = true;
          IsOpened = !IsOpened;
          _ = server.LoadNodeChildren(Id, children => {
            Children = children.ToList();
            
            foreach(child in Children)
              child.Parent = this;
              
            IsLoading = false;
          });
        } else
          IsOpened = !IsOpened;
      }
      else { 
        if(window.@event.ctrlKey)
          _ = window.open(Href, "_blank", null, false);
        else
          MainPage.Instance.SelectNode(this);
      }
    }
    
    [Html]
    public View() : string
    {
      <#        
        <div $foreach(c in Children) class="node">
          <a click="$(c.CaptionClick())" href="$(c.Href)">
            <span class="$(c.ImageClassName + " node-caption")" css-is-active="$(c.IsActive)">
              $(c.Caption)
            </span>
            <div $when(c.Children == null && (c.IsActive || c.IsPinned)) click="$(c.TogglePin())" class="node-pin" css-pinned="$(c.IsPinned)" />
          </a>
          <div $when(c.IsLoading) class="node-loading">
            Загрузка, пожалуйста подождите...
          </div>
          <div $when(c.IsOpened && Children != null)>
            <div template="$c" />
          </div>
        </div>
      #>
    }
    
    public class Server
    {
      public LoadNodeChildren(id : string) : IEnumerable[TreeNode]
      {
        TreeLoader.Provider.GetChildren(id, HttpContext.Current.Request)
                  .Select(TreeLoader.MapToTreeNode).ToList();
      }
    }
  }
}
