using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Web;
using System.Web.Routing;
using System.Collections.Generic;
using System.Linq;

using Rsdn.NavTree;

namespace Rsdn
{  
  public class NWebTreeProvider : INavTreeProvider
  {    
    public GetChildren(parentID : string, _requestContext : HttpRequest) : IEnumerable[NodeData]
    {
      if(parentID == ".")
        TreeLoader.GetTopNodes().Select(MapToNodeData)
      else 
        TreeLoader.LoadNodeChildren(parentID).Select(MapToNodeData)
    }
    
    public LoadByIds(ids : IEnumerable[string], _requestContext : HttpRequest) : IEnumerable[NodeData]
    {
      TreeLoader.LoadByIds(ids)
                .Select(MapToNodeData)
    }
    
    public Search(term : string, _requestContext : HttpRequest) : IEnumerable[NodeData]
    {
      TreeLoader.Search(term)
                .Select(MapToNodeData)
    }
    
    public FindNodesByUrl(url : string, context : RequestContext) : IEnumerable[NodeInfo]
    {
      null
    }
    
    MapToNodeData(node : TreeNode) : NodeData
    {
      NodeData("", NodeInfo(node.Id, node.Caption, node.ImageClassName, GetHref(node.Href), SortOrder.Normal, node.LoadOnDemand))
    }
    
    GetHref(href : string) : string
    {
      match(href) {
      | null => "http://www.rsdn.ru"
      | s when s.StartsWith("http://") => s
      | s => "http://www.rsdn.ru" + s
      }
    }    
  }
}
