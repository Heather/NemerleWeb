using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Typedtree;
using NemerleWeb.Utils;

using System;
using System.Collections.Generic;
using System.Linq;

namespace NemerleWeb
{
  module JsKnownMembersLinq
  {
    public ConvertMethod(type : TypeInfo, left : JsAST, member : IMember, parms : list[JsAST]) : JsAST
    {
      match(member.Name, parms)
      {
        | ("Count", l :: []) when TypeHelper.TypeName(type) == typeof(Enumerable).FullName =>
          JsAST.FieldRef(l, "length")
        | ("Where", l :: []) when TypeHelper.TypeName(type) == typeof(Enumerable).FullName =>
          JsAST.MethodRef(l, "where")
        | _ =>
          _ = type; _ = left; _ = member; _ = parms;
          throw ArgumentException($"Invalid $(member.Name)");
      }
    }
  }
}