using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using NemerleWeb;

namespace NemerleWeb
{
  macro TName(expr : PExpr)  
  syntax ("tname", expr) 
  {
    TNameImpl.DoTransform(Macros.ImplicitCTX(), expr)
  }
  
  module TNameImpl
  {
    public DoTransform(typer : Typer, expr : PExpr) : PExpr
    {
      Macros.DefineCTX(typer);
      match(expr) 
      {
        | <[ template(_.$model, _.$view) ]> => <[ GetTemplateName($(model.ToString() : string), $(view.ToString() : string)) ]>
        | <[ template(_.$model) ]> => <[ GetTemplateName($(model.ToString() : string), "View") ]>
        | _ => <[ ]>
      }
    }
  }
}
