using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using NemerleWeb;
using NemerleWeb.TypedJS;
using NemerleWeb.Website.Samples.TypedJS;

namespace NemerleWeb.Website
{
  [Unit]
  public class TutorialSamples
  {    
    public Samples : List[(object * string * int)] = List();
    
    public this()
    {
      def samplesRoot = "MVVM/Tutorial/";
      def samples = [(Sample_1(), "Sample_1.n"),
                     (Sample_2(), "Sample_2.n")];
      
      foreach((s, f) in samples with i) {
        def index = i;
        def sample = s;
        def fname = f;
        
        Samples.Add((sample, "", i + 1));
        
        _ = server.LoadSourceFor(samplesRoot + fname, src => {
          Samples[i] = (sample, src, i + 1);
          when(i == Samples.Count - 1)
            prettyPrint();
        });
      }
    }
    
    [Html]
    public View() : string
    {
       <#
         <div $foreach((sample, src, index) in Samples) class="$("tutorial-sample-" + index)">
           <div class="tutorial-sample row">
             <pre class="col-md-6 prettyprint lang-n">$src</pre>
             <div class="col-md-6">
              <div template="$sample"></div>
             </div>
           </div>
         </div>         
       #>
    }
    
    public class Server
    {      
      public LoadSourceFor(sample : string) : string
      {
        Helpers.LoadSourceFor(sample, true);
      }
    }
  }
}
