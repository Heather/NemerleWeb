using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using NemerleWeb;
using NemerleWeb.TypedJS;
using NemerleWeb.Website.Samples.TypedJS;

namespace NemerleWeb.Website
{
  [Unit]
  public class TutorialSamples
  {    
    public Samples : List[TutorialSample] = List();
    
    public this()
    {
      def samplesRoot = "MVVM/Tutorial/";
      
      Samples.Add(TutorialSample(Sample_1(), 0, "Sample_1.n", ""));
      Samples.Add(TutorialSample(Sample_2(), 1, "Sample_2.n", ""));
      Samples.Add(TutorialSample(Sample_3(), 2, "Sample_3.n", ""));
                     
      foreach(s in Samples) {
        def sample = s;
        _ = server.LoadSourceFor(samplesRoot + sample.Filename, src => {
          sample.Source = src;
          when(sample.Index == Samples.Count - 1)       
            jQuery(window).trigger("samples-initialized");
        });
      }
    }
    
    [Html]
    public View() : string
    {
       <#
         <div template="$(Samples[0])"></div>
         <div template="$(Samples[1])"></div>
         <div template="$(Samples[2])"></div>
       #>
    }
    
    public class Server
    {      
      public LoadSourceFor(sample : string) : string
      {
        Helpers.LoadSourceFor(sample, true);
      }
    }
    
    [Unit, Record]
    public class TutorialSample
    {
      public Sample : object { get; set; }
      public Index : int { get; set; }
      public Filename : string { get; set; }
      public Source : string { get; set; }
      
      [Html]
      public View() : string
      {
         <#
           <div class="$("tutorial-sample-" + Index)">
             <div class="tutorial-sample row">
               <pre class="col-md-8 prettyprint lang-n">$Source</pre>
               <div class="col-md-4">
                <div template="$Sample"></div>
               </div>
             </div>
           </div>         
         #>
      }
    }
  }
}
