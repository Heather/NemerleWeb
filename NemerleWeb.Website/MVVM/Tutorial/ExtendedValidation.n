using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using NemerleWeb;

namespace NemerleWeb.Website
{  
  [Unit]
  public class ExtendedValidation
  {
    Tasks = List.[Task]();
    TaskToAdd : Task { get; set; }

    public this()
    {
      TaskToAdd = Task("", 0, false);
    }
    
    AddTask() : void
    {      
      Tasks.Add(TaskToAdd);
      TaskToAdd = Task("Eat pretzel #" + (Tasks.Count + 1), 0, false);
    }
    
    TitleIsLongEnough(task : Task) : bool 
    {
      task.Title.Length > 2
    }

    ValidateTask(task : Task) : bool
    {
      TitleIsLongEnough(task)
    }
    
    [Html]
    View() : string
    {
      <#
        <div>
          Title
          <input value="$(TaskToAdd.Title)" />
          <span visible="$(!TitleIsLongEnough(TaskToAdd))" class="validation-error">Title is not long enough</span>
          Priority 
          <select value="$(TaskToAdd.Priority)">
            <option value="0">low</option>
            <option value="1">kinda important</option>
            <option value="2">really hungry!</option>
          </select>
          <button click="$AddTask" disabled="$(!ValidateTask(TaskToAdd))">Add task</button>
          <ul>
            <li $foreach(t in Tasks.OrderByDescending(t => t.Priority))>
              $(t.Title) ($(t.Priority))
              <input type="checkbox" checked="$(t.Status)" />
            </li>
          </ul>
        </div>
      #>
    }
    
    [Record]
    class Task
    {
        public Title : string;
        public Priority : int;
        public Status : bool;
    }
  }  
}
