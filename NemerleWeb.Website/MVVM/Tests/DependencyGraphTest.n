using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace NemerleWeb.Website.Tests
{
  [Unit]
  public class DependencyGraphTest
  {
    _tests = List.[(string * bool)]();
    _a : A = A();
    _b : B = B();
    B : B { get { _b; } }
    
    public this()
    {
      def test(name, code) {
        try {
          code();
          _tests.Add(name, true) 
        } catch {
        | _ => _tests.Add(name, false)
        }
      }
      
      test("constructor", () => { def _c = C(); });
      test("field access", () => _ = _a.S);
      test("property access", () => _ = B.S);
      //need test for base class constructor call
    }
    
    [Html]
    public View() : string
    {
      <#
        <table class="jsast-tests">
          <tbody>
            <tr $foreach((name, result) in _tests) css-passed="$result">
              <td>$name</td>
              <td>$(if(result) "pass" else "fail")</td>
            </tr>
          </tbody>
        </table>
      #>
    }
  }
  
  [Unit]
  class A
  { public S = "1"; }
  
  [Unit]
  class B
  { public S = "1"; }
  
  [Unit]
  class C
  { public S = "1"; }
  
  [Unit]
  class D
  { public S = "1"; }
}
