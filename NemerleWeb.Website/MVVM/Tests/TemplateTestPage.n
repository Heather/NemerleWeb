using NemerleWeb;

using Nemerle.Extensions;
using System;
using System.Collections.Generic;
using System.Linq;

namespace NemerleWeb.Website.Tests
{
  [Unit]
  public class TemplateTestsPage
  {
    public Dummy : TemplateDummy;    
    
    public this() 
    {
      Dummy = TemplateDummy();
    }
    
    public GetCustomViewName(name : string) : string
    {
      name
    }
    
    [Html]
    public View() : string
    {
      /*<#
        <ul>
          <li>1. template(_.Dummy): <span template="$(_.Dummy)"></span></li>
          <li>2. template(_.Dummy, GetCustomViewName("View")): <span template="$(_.Dummy, GetCustomViewName("View"))"></span></li>
          <li>3. template(_.Dummy, _.CustomName): <span template="$(_.Dummy, _.CustomName)"></span></li>
          <li>4. template(_.Dummy, _.CustomName()): <span template="$(_.Dummy, _.CustomName())"></span></li>
          <li>5. template(Dummy): <span template="$(template(Dummy))"></span></li>
          <li>6. template(Dummy, "CustomName"): <span template="$(Dummy, "CustomName")"></span></li>
          <li>7. template(Dummy, GetCustomViewName("CustomName")): <span template="$(Dummy, GetCustomViewName("CustomName"))"></span></li>
          <li>8. template(Dummy, _.CustomName): <span template="$(Dummy, _.CustomName)"></span></li>
          <li>9. template(Dummy, _.CustomName()): <span template="$(Dummy, _.CustomName())"></span></li>
        </ul>
      #>*/
      <#
        <div></div>
      #>
    }
    
    /*
          
          5.
          <div template="$(Dummy, "View")"></div>
          6.
          <div template="$(Dummy, "CustomView")"></div>
    */
    
    [Unit]
    public class TemplateDummy 
    {
      [Html]
      public View() : string
      {
        <#
          <span>
            Passed (View)
          </span>
        #>
      }
      
      [Html]
      public CustomName() : string
      {
        <#
          <span>
            Passed (CustomName)
          </span>
        #>
      }
    }   
  }
}
