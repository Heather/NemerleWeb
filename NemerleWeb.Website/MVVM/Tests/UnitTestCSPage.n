using NemerleWeb;
using Nemerle.Extensions;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Globalization;
using Nemerle;
using Nemerle.Utility;
using Nemerle.Peg;
using NemerleWeb.Tests.Macro;
using NemerleWeb.TypedJS;
using NemerleWeb.Predefined;

namespace NemerleWeb.Website.Tests
{
  [Unit]
  public class UnitTestCSPage
  {
    Results : List[(string * bool)] { get; set; }
        
    public this()
    {
      def test(description : string, res : void -> bool) : void
      {
        Results.Add((description, res()));
      }
      Results = List();
      
      test("simple", () =>
      {
        true
      });
      
      test("Field initialization", () =>
      {
        def f = FieldsInitializationCS();
        
        f.Field == 1
      });
      
      test("Readonly field initialization", () =>
      {
        def f = FieldsInitializationCS();
        
        f.ReadonlyField == 2
      });
      
      test("Field constructor initialization", () =>
      {
        def f = ConstructorFieldsInitializationCS();
        
        f.Field == 1
      });
      
      test("Readonly field constructor initialization", () =>
      {
        def f = ConstructorFieldsInitializationCS();
        
        f.ReadonlyField == 2
      });
    }
    
    [Html]
    public View() : string
    {
      <#
        <table class="jsast-tests">
          <tbody>
            <tr $foreach(r in Results) css-passed="$(r[1])">
              <td>$(r[0])</td>
              <td>$(r[1])</td>
            </tr>
          </tbody>
        </table>
      #>
    }
  }
}